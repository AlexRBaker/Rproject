else {
}
}
return (sto)
}
#### command used for above function ReMatfromInd("C:/Users/s4284361/Documents/GitHub/Pitchers_PTRS2014/Data/Gmats_Cor_as_CSVs","C:/Users/s4284361/Documents/GitHub/Rproject/Psubmatindex.csv")
### Redone MatfromInd For Psubmatfile
ReMatfromInd<-function(dir1,dir2){ ## dir1 <- cor matrix folder ##dir 2 PmatIndex file_file
q<-path_file(dir1)
setwd(dir1)
matrices <- dir()
no.mats <- length(q[[1]][grepl(".csv", q[[1]])])
matrix_list <- list()
# this loop reads in each matrix from the folder of .csv files and writes
# them into a list
for (i in 1:no.mats) {
matrix_list[[i]] <- read.csv(q[[1]][grepl(".csv", q[[1]])][i])
}
names(matrix_list) <- matrices[grepl(".csv",q[[1]])]
z<-read.csv(dir2,stringsAsFactors=FALSE)
GPmat<-list()
for (i in 1:length(z[,5])) {
GPmat[[i]]<-matrix_list[grepl(z[i,5],names(matrix_list))][[1]]
names(GPmat)[i]<-z[i,5]
}
return (GPmat) ### return list of list of list
}
#### modified P through G to accept list instead of dir
PthroughG2<-function(tests) { ## dir1 is the directory of P submatrices and dir2 is the dir containing the G matrices
Pmats<-tests[[1]]
Gmats<-tests[[2]] ### creates list of relevant G matrices entreted in Pmatindex
ProjPG<-matrix(NA,nrow=length(Pmats),ncol=MaxnoTraits(Pmats))
Peigsto<-matrix(NA,nrow=length(Pmats),ncol=MaxnoTraits(Pmats))
Geigsto<-matrix(NA,nrow=length(Pmats),ncol=MaxnoTraits(Pmats))
nullnames<-rep(0,length(Pmats))
rownames(ProjPG)<-nullnames
rownames(Peigsto)<-nullnames
rownames(Geigsto)<-nullnames
for (i in 1:length(Pmats)) {
Psto<-Pmats[grepl(names(Gmats[i]),names(Pmats))]
Gsto<-Gmats[grepl(names(Gmats[i]),names(Pmats))]
rownames(ProjPG)[i]<-names(Gmats[i])
rownames(Peigsto)[i]<-names(Gmats[i])
rownames(Geigsto)[i]<-names(Gmats[i])
for (j in 1:length(Psto[[1]][,1])){
ProjPG[i,j]<-t((eigen(Psto[[1]])$vectors[,j]))%*%as.matrix(Gsto[[1]])%*%(eigen(Psto[[1]])$vectors[,j])
Peigsto[i,j]<-eigen(Psto[[1]])$values[j]
Geigsto[i,j]<-eigen(Gsto[[1]])$values[j]
}
}
return(list(ProjPG=ProjPG,Peigsto=Peigsto,Geigsto=Geigsto))
}
PG<-PaG()
PG<-PaG()
getwd()
setwd(C:/Users/s4284361/Documents/Github/Rproject)
setwd("C:/Users/s4284361/Documents/Github/Rproject")
PG<-PaG()
PaG<-function() {
q<-MatasList("C:/Users/s4284361/Documents/GitHub/Rproject/Psubmatrices")
p<-ReMatfromInd("C:/Users/s4284361/Documents/GitHub/Pitchers_PTRS2014/Data/Gmats_Cor_as_CSVs","C:/Users/s4284361/Documents/GitHub/Rproject/Psubmatindex.csv")
return  (list(Pcor=q,Gcor=p))
}
PG<-PaG()
tests<-matsubsample(PG,5)
lkt<-tests
names(lkt[[1]])<-paste(names(lkt[[1]]),".csv",sep="")
names(lkt[[2]])<-paste(names(lkt[[2]]),".csv",sep="")
WriteMatList(lkt[[1]],"C:/Users/s4284361/Documents/GitHub/Rproject/Psubsampledmatrices")
WriteMatList(lkt[[2]],"C:/Users/s4284361/Documents/GitHub/Rproject/Gsubsampledmatrices")
test2<-PthroughG2(tests)
test2
test2[[1]]
boxplot(test2[[1]])
boxplot(test2[[2]])
boxplot(test2[[3]])
boxplot(test2[[2]])
boxplot(test2[[1]])
tests
test2
test2[[1]]
test2[[3]]
test2[[2]]
test2[[1]]
boxplot(test2[[1]])
boxplot(test2[[2]])
boxplot(test2[[3]])
test2[[3]]
test2[[3]]<0
test[[3]][41]
test2[[3]][41]
test2[[3]]
test2[[3]][1,1]
test2[[3]][1,2]
test2[[3]][41,1]
test2[[3]][41,]
tests
test2[[3]][41,1]
tests2[[2]]$Rea2000.342
tests[[2]]$Rea2000.342
eigen(tests[[2]]$Rea2000.342)
tests
test2[[3]]
test[[3]][,1]-test2[[3]][,1]
test2[[3]][,1]-test2[[3]][,2]
test2[[3]][,1]-test2[[3]][,2]>0
test2[[3]][,2]-test2[[3]][,3]>0
test2[[3]][,3]-test2[[3]][,4]>0
test2[[3]][,4]-test2[[3]][,5]>0
(test2[[3]][,4]-test2[[3]][,5])>0
(test2[[3]][,1]-test2[[3]][,2])>0
sum((test2[[3]][,1]-test2[[3]][,2])>0)
sum((test2[[3]][,2]-test2[[3]][,3])>0)
sum((test2[[3]][,3]-test2[[3]][,4])>0)
sum((test2[[3]][,4]-test2[[3]][,5])>0)
(test2[[3]][,3]-test2[[3]][,4])>0
eigen(tests[[2]]$Beg2004.87)
tests[[2]]$Beg2004.87
tests[[2]]$Pre1998.334
eigen(tests[[2]]$Pre1998.334)
(test2[[3]][,3]-test2[[3]][,4])>0
eigen(tests[[2]]$Bro2001.124)
(test2[[3]][,4]-test2[[3]][,5])>0
eigen(tests[[2]]$Bon2005.130)
?eigen
eigen(tests[[2]]$Bro2001.124,symmetric=TRUE)
eigen(tests[[2]]$Bro2001.124)
PthroughG2<-function(tests) { ## dir1 is the directory of P submatrices and dir2 is the dir containing the G matrices
Pmats<-tests[[1]]
Gmats<-tests[[2]] ### creates list of relevant G matrices entreted in Pmatindex
ProjPG<-matrix(NA,nrow=length(Pmats),ncol=MaxnoTraits(Pmats))
Peigsto<-matrix(NA,nrow=length(Pmats),ncol=MaxnoTraits(Pmats))
Geigsto<-matrix(NA,nrow=length(Pmats),ncol=MaxnoTraits(Pmats))
nullnames<-rep(0,length(Pmats))
rownames(ProjPG)<-nullnames
rownames(Peigsto)<-nullnames
rownames(Geigsto)<-nullnames
for (i in 1:length(Pmats)) {
Psto<-Pmats[grepl(names(Gmats[i]),names(Pmats))]
Gsto<-Gmats[grepl(names(Gmats[i]),names(Pmats))]
rownames(ProjPG)[i]<-names(Gmats[i])
rownames(Peigsto)[i]<-names(Gmats[i])
rownames(Geigsto)[i]<-names(Gmats[i])
for (j in 1:length(Psto[[1]][,1])){
ProjPG[i,j]<-t((eigen(Psto[[1]],symmetric=TRUE)$vectors[,j]))%*%as.matrix(Gsto[[1]])%*%(eigen(Psto[[1]],symmetric=TRUE)$vectors[,j])
Peigsto[i,j]<-eigen(Psto[[1]],symmetric=TRUE)$values[j]
Geigsto[i,j]<-eigen(Gsto[[1]],symmetric=TRUE)$values[j]
}
}
return(list(ProjPG=ProjPG,Peigsto=Peigsto,Geigsto=Geigsto))
}
test2<-PthroughG2(tests)
test2
test2[[3]]
test2[[3]][,1]-test[[3]][,2]
test2[[3]][,1]-test2[[3]][,2]
sum((test2[[3]][,1]-test2[[3]][,2])>0)
sum((test2[[3]][,2]-test2[[3]][,3])>0)
sum((test2[[3]][,3]-test2[[3]][,4])>0)
sum((test2[[3]][,4]-test2[[3]][,5])>0)
eigen(tests[[2]]$Bro2001.124,symmetric=TRUE)
eigen(tests[[2]]$Bro2001.124)
test2[[2]]-test2[[3]]
boxplot(test2[[2]]-test2[[3]])
boxplot(test2[[2]]-test2[[3]])
names(test2)
names(test2$Peigsto-test2$Geigsto)
test2$Peigsto-test2$Geigsto
z<-(test2$Peigsto-test2$Geigsto)
boxplot(test2[[2]],col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Scaled Phenotypic/Genetic variance",ylim=c(0,4.5))
boxplot(test2[[2]],col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Difference in scaled variance",ylim=c(0,4.5))
legend(x="topright", c("Difference_P&G"), fill=c("grey"))
boxplot(z,col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Difference in scaled variance",ylim=c(0,4.5))
boxplot(z,col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Difference in scaled variance")
boxplot(test2[[2]],col="white",boxwex=0.25,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Scaled Phenotypic/Genetic variance")
boxplot(test2[[3]],col="grey",add=TRUE, at=1.3:(5+0.3), boxwex=0.25,xaxt='n')
legend(x="topright", c("Phenotypic Correlation","Genetic Correlation"), fill=c("white","grey"))
Gdir<-"C:/Users/s4284361/Documents/GitHub/Rproject/Graphs"
mypath<-file.path(paste(Gdir),paste("P&G","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
mypath
pdf(file=mypath)
boxplot(test2[[2]],col="white",boxwex=0.25,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Scaled Phenotypic/Genetic variance")
boxplot(test2[[3]],col="grey",add=TRUE, at=1.3:(5+0.3), boxwex=0.25,xaxt='n')
legend(x="topright", c("Phenotypic Correlation","Genetic Correlation"), fill=c("white","grey"))
dev.off()
mypath<-file.path(paste(Gdir),paste("P&G","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(test2[[2]],col="white",boxwex=0.25,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Scaled Phenotypic/Genetic variance")
boxplot(test2[[3]],col="grey",add=TRUE, at=1.3:(5+0.3), boxwex=0.25,xaxt='n')
legend(x="topright", c("Phenotypic Correlation","Genetic Correlation"), fill=c("white","grey"))
dev.off()
mypath<-file.path(paste(Gdir),paste("PthroughG","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(test2[[1]],col="white",boxwex=0.25,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Scaled Phenotypic/Genetic variance")
legend(x="topright", c("P%*%G%*%P"), fill=c("White"))
dev.off()
mypath<-file.path(paste(Gdir),paste("All3","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(test2[[2]],col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Scaled Phenotypic/Genetic variance",ylim=c(0,4.5))
boxplot(test2[[3]],add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(test2[[1]],col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
legend(x="topright", c("Phenotypic correlation","Genotypic correlation","Projection of P through G"), fill=c("white","grey","gray42"))
dev.off()
z<-(test2$Peigsto-test2$Geigsto)
mypath<-file.path(paste(Gdir),paste("difP&G","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(z,col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Difference in scaled variance")
legend(x="topright", c("Difference_P&G"), fill=c("grey"))
dev.off()
mypath<-file.path(paste(Gdir),paste("difP&G","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(z,col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Difference in scaled variance")
legend(x="topleft", c("Difference_P&G"), fill=c("grey"))
dev.off()
mypath<-file.path(paste(Gdir),paste("difP&G","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(z,col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Difference in scaled variance")
legend(x="topleft", c("Difference_P&G"), fill=c("grey"))
dev.off()
mypath<-file.path(paste(Gdir),paste("difP&G","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(z,col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Difference in scaled variance")
legend(x="topleft", c("Difference_P&G"), fill=c("grey"))
abline(0,0,lty=2)
dev.off()
mypath<-file.path(paste(Gdir),paste("difP&G","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(z,col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Difference in scaled variance")
legend(x="topleft", c("Difference_P&G"), fill=c("grey"))
abline(0,0,lty=2)
dev.off()
mypath<-file.path(paste(Gdir),paste("difP&G","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(z,col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Difference in scaled variance")
legend(x="topleft", c("Difference_P&G"), fill=c("grey"))
abline(0,0,lty=2)
dev.off()
mypath<-file.path(paste(Gdir),paste("difP&G","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(z,col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Difference in scaled variance")
legend(x="topleft", c("eig(P)-eig(G)"), fill=c("grey"))
abline(0,0,lty=2)
dev.off()
mypath<-file.path(paste(Gdir),paste("difP&G","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(z,col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Difference in scaled variance")
legend(x="topleft", c("eig(P)-eig(G)"), fill=c("grey"))
abline(0,0,lty=2)
dev.off()
hist(z[,1])
hist(z[,2])
hist(z[,3])
hist(z[,4])
hist(z[,5])
hist(z)
hist(z)
z
test2[[2]]
test2[[2]]-test2[[3]]
test2[[2]]
is.unsorted(rev(test2[[2]][1,]))
is.unsorted(rev(test2[[2]][2,]))
is.unsorted(rev(test2[[2]][,]))
is.unsorted(rev(test2[[2]][,1]))
is.unsorted(rev(test2[[2]][c(1,2),]))
is.unsorted(rev(test2[[2]][1,]))
is.unsorted((test2[[2]][1,]))
is.unsorted(rev(test2[[2]][1,]))
?is.sorted
?is.unsorted
sum((test2[[2]][1,]-test2[[2]][2,])>0)
sum((test2[[2]][,1]-test2[[2]][,2])>0)
sum((test2[[2]][,2]-test2[[2]][,3])>0)
sum((test2[[2]][,3]-test2[[2]][,4])>0)
sum((test2[[2]][,4]-test2[[2]][,5])>0)
sum((test2[[3]][,1]-test2[[3]][,2])>0)
sum((test2[[3]][,2]-test2[[3]][,3])>0)
sum((test2[[3]][,3]-test2[[3]][,4])>0)
sum((test2[[3]][,4]-test2[[3]][,5])>0)
dif(test2[[3]])
diff(test2[[3]])
diff(test2[[3]][1,])
?doff
?diff
WriteMatList(lkt[[1]],"C:/Users/s4284361/Documents/GitHub/Rproject/Psubsampledmatrices")
WriteMatList(lkt[[2]],"C:/Users/s4284361/Documents/GitHub/Rproject/Gsubsampledmatrices")
lkt<-tests
names(lkt[[1]])<-paste(names(lkt[[1]]),".csv",sep="")
names(lkt[[2]])<-paste(names(lkt[[2]]),".csv",sep="")
WriteMatList(lkt[[1]],"C:/Users/s4284361/Documents/GitHub/Rproject/Psubsampledmatrices")
WriteMatList(lkt[[2]],"C:/Users/s4284361/Documents/GitHub/Rproject/Gsubsampledmatrices")
mypath<-file.path(paste(Gdir),paste("PthroughG","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(test2[[1]],col="white",boxwex=0.25,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Scaled Phenotypic/Genetic variance")
legend(x="topright", c("P%*%G%*%P"), fill=c("White"))
dev.off()
mn<-data.frame(matrix(0,nrow=44,ncol=16))
z<-read.csv("C:/Users/s4284361/Documents/GitHub/Rproject/Psubmatindex.csv",header=TRUE,stringsAsFactors=FALSE)
for (i in 1:length(names(tests[[1]]))) {mn[i,]<-z[grepl(names(tests[[1]])[i],z$filename),]}
length(mn[,1])
names(test[[1]])
names(tests[[1]])
lengtH(names(tests[[1]]))
lengtH(names(tests[[1]]))
length(names(tests[[1]]))
mn
mn<-data.frame(matrix(0,nrow=43,ncol=16))
z<-read.csv("C:/Users/s4284361/Documents/GitHub/Rproject/Psubmatindex.csv",header=TRUE,stringsAsFactors=FALSE)
for (i in 1:length(names(tests[[1]]))) {mn[i,]<-z[grepl(names(tests[[1]])[i],z$filename),]}
PsubtraitM<-tests[[1]][grepl("M",mn[,8])]
PsubtraitS<-tests[[1]][grepl("S",mn[,8])]
PsubtraitL<-tests[[1]][grepl("L",mn[,8])]
GsubtraitM<-tests[[2]][grepl("M",mn[,8])]
GsubtraitS<-tests[[2]][grepl("S",mn[,8])]
GsubtraitL<-tests[[2]][grepl("L",mn[,8])]
PsubtraitM
length(PsubtraitM)
length(PsubtraitS)
length(PsubtraitL)
GsubtraitM<-tests[[2]][grepl("M",mn[,8])]
GsubtraitS<-tests[[2]][grepl("S",mn[,8])]
GsubtraitL<-tests[[2]][grepl("L",mn[,8])]
PsubtraitM
mn[,5]
names(test2[[1]])
names(tests[[1]])
names(tests[[1]])==mn[,5]
subM<-list(PsubtraitM,GsubtraitM)
subS<-list(PsubtraitS,GsubtraitS)
subL<-list(PsubtraitL,GsubtraitL)
MPtG<-PthroughG2(subM)
SPtG<-PthroughG2(subS)
LPtG<-PthroughG2(subL)
DifM<-MPtG[[2]]-MPtG[[3]]
DifS<-SPtG[[2]]-SPtG[[3]]
DifL<-LPtG[[2]]-LPtG[[3]]
DifM
((MPtG[[2]][,1]-MPtG[[3]][,2])>0)
sum(((MPtG[[2]][,1]-MPtG[[3]][,2])>0))
sum(((MPtG[[2]][,2]-MPtG[[3]][,3])>0))
PthroughG2<-function(tests) { ## dir1 is the directory of P submatrices and dir2 is the dir containing the G matrices
Pmats<-tests[[1]]
Gmats<-tests[[2]] ### creates list of relevant G matrices entreted in Pmatindex
ProjPG<-matrix(NA,nrow=length(Pmats),ncol=MaxnoTraits(Pmats))
Peigsto<-matrix(NA,nrow=length(Pmats),ncol=MaxnoTraits(Pmats))
Geigsto<-matrix(NA,nrow=length(Pmats),ncol=MaxnoTraits(Pmats))
nullnames<-rep(0,length(Pmats))
rownames(ProjPG)<-nullnames
rownames(Peigsto)<-nullnames
rownames(Geigsto)<-nullnames
for (i in 1:length(Pmats)) {
Psto<-Pmats[grepl(names(Gmats[i]),names(Pmats))]
Gsto<-Gmats[grepl(names(Gmats[i]),names(Pmats))]
rownames(ProjPG)[i]<-names(Gmats[i])
rownames(Peigsto)[i]<-names(Gmats[i])
rownames(Geigsto)[i]<-names(Gmats[i])
for (j in 1:length(Psto[[1]][,1])){
ProjPG[i,j]<-t((eigen(Psto[[1]],symmetric=TRUE)$vectors[,j]))%*%as.matrix(Gsto[[1]])%*%(eigen(Psto[[1]],symmetric=TRUE)$vectors[,j])
Peigsto[i,j]<-eigen(Psto[[1]],symmetric=TRUE)$values[j]
Geigsto[i,j]<-eigen(Gsto[[1]],symmetric=TRUE)$values[j]
}
}
return(list(ProjPG=ProjPG,Peigsto=Peigsto,Geigsto=Geigsto))
}
MPtG
sum(((MPtG[[2]][,2]-MPtG[[3]][,3])>0))
sum(((MPtG[[2]][,3]-MPtG[[3]][,4])>0))
sum(((MPtG[[2]][,4]-MPtG[[3]][,5])>0))
MPtG[[2]][,1]-MPtG[[2]][,2]
MPtG[[2]][,2]-MPtG[[2]][,3]
MPtG[[2]][,3]-MPtG[[2]][,4]
MPtG[[2]][,4]-MPtG[[2]][,5]
(MPtG[[2]][,4]-MPtG[[2]][,5])>0
(MPtG[[2]][,3]-MPtG[[2]][,4])>0
(MPtG[[2]][,2]-MPtG[[2]][,3])>0
(MPtG[[2]][,1]-MPtG[[2]][,2])>0
(MPtG[[3]][,1]-MPtG[[3]][,2])>0
(MPtG[[3]][,2]-MPtG[[3]][,3])>0
(MPtG[[3]][,3]-MPtG[[3]][,4])>0
(MPtG[[3]][,4]-MPtG[[3]][,5])>0
mypath<-file.path(paste(Gdir),paste("SplitT_P","_boxplot" ,paste("T5n=44"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(DifL,col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Scaled Phenotypic/Genetic variance",ylim=c(0,4.5))
boxplot(DifM,add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(DifS,col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
legend(x="topright", c("Life History - 7","Morphology - 26","Sexually Selected - 10"), fill=c("white","grey","gray42"))
dev.off()
mypath<-file.path(paste(Gdir),paste("SplitT_P","_boxplot" ,paste("T5n=44"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(DifL,col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Scaled Phenotypic/Genetic variance")
boxplot(DifM,add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(DifS,col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
legend(x="topright", c("Life History - 7","Morphology - 26","Sexually Selected - 10"), fill=c("white","grey","gray42"))
legend(x="bottomright", c("Life History - 7","Morphology - 26","Sexually Selected - 10"), fill=c("white","grey","gray42"))
mypath<-file.path(paste(Gdir),paste("SplitT_P","_boxplot" ,paste("T5n=44"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(DifL,col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Scaled Phenotypic/Genetic variance")
boxplot(DifM,add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(DifS,col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
legend(x="bottomright", c("Life History - 7","Morphology - 26","Sexually Selected - 10"), fill=c("white","grey","gray42"))
dev.off()
mypath<-file.path(paste(Gdir),paste("SplitT_P","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(DifL,col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Difference between eig(P) and eig(G)")
boxplot(DifM,add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(DifS,col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
legend(x="bottomright", c("Life History - 7","Morphology - 26","Sexually Selected - 10"), fill=c("white","grey","gray42"))
dev.off()
mypath<-file.path(paste(Gdir),paste("SplitT_PtG","_boxplot" ,paste("T5n=44"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(LPtG[[1]],col="white",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Scaled Phenotypic/Genetic variance",ylim=c(0,4.5))
boxplot(MPtG[[1]],col="grey", add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(SPtG[[1]],col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
legend(x="topright", c("Life History - 7","Morphology - 26","Sexually Selected - 10"), fill=c("white","grey","gray42"))
dev.off()
mypath<-file.path(paste(Gdir),paste("SplitT_PtG","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(LPtG[[1]],col="white",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Scaled Phenotypic/Genetic variance",ylim=c(0,4.5))
boxplot(MPtG[[1]],col="grey", add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(SPtG[[1]],col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
legend(x="topright", c("Life History - 7","Morphology - 26","Sexually Selected - 10"), fill=c("white","grey","gray42"))
dev.off()
mypath<-file.path(paste(Gdir),paste("SplitT_PtG","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(LPtG[[1]],col="white",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="P'GP")
boxplot(MPtG[[1]],col="grey", add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(SPtG[[1]],col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
legend(x="topright", c("Life History - 7","Morphology - 26","Sexually Selected - 10"), fill=c("white","grey","gray42"))
dev.off()
mypath<-file.path(paste(Gdir),paste("SplitT_P","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(DifL,col="white",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Difference between eig(P) and eig(G)")
boxplot(DifM,col="grey"add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(DifS,col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
legend(x="bottomright", c("Life History - 7","Morphology - 26","Sexually Selected - 10"), fill=c("white","grey","gray42"))
boxplot(DifM,col="grey",add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
mypath<-file.path(paste(Gdir),paste("SplitT_P","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(DifL,col="white",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Difference between eig(P) and eig(G)")
boxplot(DifM,col="grey",add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(DifS,col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
legend(x="bottomright", c("Life History - 7","Morphology - 26","Sexually Selected - 10"), fill=c("white","grey","gray42"))
dev.off()
mypath<-file.path(paste(Gdir),paste("SplitT_P","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(DifL,col="white",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Difference between eig(P) and eig(G)")
boxplot(DifM,col="grey",add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(DifS,col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
abline(0,0,lty=2)
legend(x="bottomright", c("Life History - 7","Morphology - 26","Sexually Selected - 10"), fill=c("white","grey","gray42"))
dev.off()
mypath<-file.path(paste(Gdir),paste("SplitT_P&All","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(DifL,col="white",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Difference between eig(P) and eig(G)")
boxplot(DifM,col="grey",add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(DifS,col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
boxplot(z,col="black",add=TRUE, at 1.6:(5+0.6),boxwex=0.18,xaxt='n')
abline(0,0,lty=2)
legend(x="bottomright", c("Life History - 7","Morphology - 26","Sexually Selected - 10"), fill=c("white","grey","gray42"))
boxplot(z,col="black",add=TRUE, at=1.6:(5+0.6),boxwex=0.18,xaxt='n')
mypath<-file.path(paste(Gdir),paste("SplitT_P&All","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(DifL,col="white",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Difference between eig(P) and eig(G)")
boxplot(DifM,col="grey",add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(DifS,col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
boxplot(z,col="black",add=TRUE, at=1.6:(5+0.6), boxwex=0.18, xaxt='n')
abline(0,0,lty=2)
legend(x="bottomright", c("Life History - 7","Morphology - 26","Sexually Selected - 10", "All -43"), fill=c("white","grey","gray42","black"))
dev.off()
z
z<-(test2$Peigsto-test2$Geigsto)
mypath<-file.path(paste(Gdir),paste("SplitT_PtG","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(LPtG[[1]],col="white",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="P'GP")
boxplot(MPtG[[1]],col="grey", add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(SPtG[[1]],col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
legend(x="topright", c("Life History - 7","Morphology - 26","Sexually Selected - 10"), fill=c("white","grey","gray42"))
dev.off()
mypath<-file.path(paste(Gdir),paste("SplitT_PtG","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(LPtG[[1]],col="white",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="P'GP")
boxplot(MPtG[[1]],col="grey", add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(SPtG[[1]],col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
legend(x="topright", c("Life History - 7","Morphology - 26","Sexually Selected - 10"), fill=c("white","grey","gray42"))
dev.off()
dev.off()
dev.off()
mypath<-file.path(paste(Gdir),paste("SplitT_PtG","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(LPtG[[1]],col="white",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="P'GP")
boxplot(MPtG[[1]],col="grey", add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(SPtG[[1]],col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
legend(x="topright", c("Life History - 7","Morphology - 26","Sexually Selected - 10"), fill=c("white","grey","gray42"))
dev.off()
mypath<-file.path(paste(Gdir),paste("SplitT_P&All","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(DifL,col="white",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Difference between eig(P) and eig(G)")
boxplot(DifM,col="grey",add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(DifS,col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
boxplot(z,col="black",add=TRUE, at=1.6:(5+0.6), boxwex=0.18, xaxt='n')
abline(0,0,lty=2)
legend(x="bottomright", c("Life History - 7","Morphology - 26","Sexually Selected - 10", "All -43"), fill=c("white","grey","gray42","black"))
dev.off()
mypath<-file.path(paste(Gdir),paste("SplitT_P&All","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(DifL,col="white",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Difference between eig(P) and eig(G)",ylim=c(-1.8,0.8))
boxplot(DifM,col="grey",add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(DifS,col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
boxplot(z,col="black",add=TRUE, at=1.6:(5+0.6), boxwex=0.18, xaxt='n')
abline(0,0,lty=2)
legend(x="bottomright", c("Life History - 7","Morphology - 26","Sexually Selected - 10", "All -43"), fill=c("white","grey","gray42","black"))
dev.off()
