nullnames<-rep(0,length(Pmats))
rownames(ProjPG)<-nullnames
rownames(Peigsto)<-nullnames
rownames(Geigsto)<-nullnames
for (i in 1:length(Pmats)) {
Psto<-Pmats[grepl(names(Gmats[i]),names(Pmats))]
Gsto<-Gmats[grepl(names(Gmats[i]),names(Pmats))]
rownames(ProjPG)[i]<-names(Gmats[i])
rownames(Peigsto)[i]<-names(Gmats[i])
rownames(Geigsto)[i]<-names(Gmats[i])
for (j in 1:length(Psto[[1]][,1])){
ProjPG[i,j]<-t((eigen(Psto[[1]])$vectors[,j]))%*%as.matrix(Gsto[[1]])%*%(eigen(Psto[[1]])$vectors[,j])
Peigsto[i,j]<-eigen(Psto[[1]])$values[j]
Geigsto[i,j]<-eigen(Gsto[[1]])$values[j]
}
}
return(list(ProjPG=ProjPG,Peigsto=Peigsto,Geigsto=Geigsto))
}
### Function to manually do cov2cor since cov2cor does nto appear to work.
listcov2cor<-function(list2) {
for (i in 1:length(list2)) {
if (sum(diag(as.matrix(list2[[i]])))!=length(list2[[i]])) {
varmat<-matrix(0,nrow=length(list2[[i]]),ncol=length(list2[[i]]))
var<-diag(as.matrix(list2[[i]]))
for (j in 1:length(list2[[i]])) {
for (k in 1:length(list2[[i]])) {
varmat[j,k]<-sqrt(var[j])*sqrt(var[k])
}
}
list2[[names(list2[i])]]<-as.matrix(list2[[i]])/varmat
}
else {
}
}
return (list2)
}
###### Function to extract only the data off certain length based on the no . of NAs in the row. Function is not going to be made scalable.
sizeddata<-function(list2,size) {
ProjPG<-list2[[1]]
Peigsto<-list2[[2]]
Geigsto<-list2[[3]]
SProj<-data.frame(matrix(NA,nrow=length(ProjPG[,1]),ncol=size))
SPeig<-data.frame(matrix(NA,nrow=length(ProjPG[,1]),ncol=size))
SGeig<-data.frame(matrix(NA,nrow=length(ProjPG[,1]),ncol=size))
counter<-1
for (i in 1:length(ProjPG[,1])){
if (is.na(match(NA,ProjPG[i,]))) {
}
else if (match(NA,ProjPG[i,])==(size+1)) {
SProj[counter,]<-ProjPG[i,1:size]
SPeig[counter,]<-Peigsto[i,1:size]
SGeig[counter,]<-Geigsto[i,1:size]
counter<-counter+1
}
else {
}
}
SProj<-SProj[1:(counter-1),]
SPeig<-SPeig[1:(counter-1),]
SGeig<-SGeig[1:(counter-1),]
return(list(SProj,SPeig,SGeig))
}
#### Creating an index document for Psubmatrices
Psubmatindex<-function(dir) { ## dir ="C:/Users/s4284361/Documents/GitHub/Rproject/Psubmatrices"
p<-list.files(path=dir)
p<-p[grepl(".csv",p)] ### Takes only the csv files
q<-read.csv("C:/Users/s4284361/Documents/GitHub/Pitchers_PTRS2014/Data/MatrixIndexFinal.csv",header=TRUE,stringsAsFactors=FALSE) ## Reads in orderdatamatrix
m<-read.csv("C:/Users/s4284361/Documents/GitHub/Rproject/Pmatindex.csv",header=TRUE,stringsAsFactors=FALSE)
z<-data.frame(matrix(NA,nrow=length(p),ncol=(length(q)+2)))
for (i in 1:length(p)) {
z[i,]<-q[grepl(strsplit(p[[i]],".csv"),q[,5]),]
z[i,15]<-m[grepl(strsplit(p[[i]],".csv"),m[,17]),paste(11)]
z[i,16]<-m[grepl(strsplit(p[[i]],".csv"),m[,17]),14]
}
nam<-names(q)
names(z)<-nam
names(z)[c(15,16)]<-c("Title","DOI")
setwd("C:/Users/s4284361/Documents/GitHub/Rproject")
write.csv("Psubmatindex.csv",x=z,row.names=FALSE)
}
##### Extract Trait_type
##Directory Used MatasList("C:/Users/s4284361/Documents/GitHub/Rproject/Psubmatrices")
#####
### Current directories dir1<-"C:/Users/s4284361/Documents/GitHub/Rproject/Pmatrices"
# dir2<-"C:/Users/s4284361/Documents/GitHub/Pitchers_PTRS2014/Data/Gmats_Cor_as_CSVs"
#dir3<-"C:/Users/s4284361/Documents/GitHub/Rproject/Pmatindex.csv"
#dir4<-"C:/Users/s4284361/Documents/GitHub/Rproject/Psubmatrices"
#####Trialling final graph
#### P & G mats = list (will use matfromind and mataslist functions)
PaG<-function() {
q<-MatasList("G:/GIThub/Rproject/Psubmatrices")
p<-ReMatfromInd("G:/GIThub/Pitchers_PTRS2014/Data/Gmats_Cor_as_CSVs","G:/GIThub/Rproject/Psubmatindex.csv")
return  (list(Pcor=q,Gcor=p))
}
####
matsubsample<-function(PG,T_no) {
q<-PG[[1]]
p<-PG[[2]]
sto<-list(Psub=list(),Gsub=list())
k=1
for (i in 1:length(q)) {
if (length(q[[i]][1,])<T_no) {
}
else if (length(q[[i]][1,])==T_no) {
sto[[1]][[k]]<-q[[i]]
names(sto[[1]])[k]<-strsplit(names(q[i]),".csv")
sto[[2]][[k]]<-p[[i]]
names(sto[[2]])[k]<-strsplit(names(p[i]),".csv")
k=k+1
}
else if (length(q[[i]][1,])>T_no) {
randno<-sample(1:length(q[[i]][1,]),T_no)
sto[[1]][[k]]<-q[[i]][randno, randno]
names(sto[[1]])[k]<-strsplit(names(q[i]),".csv")
sto[[2]][[k]]<-p[[i]][randno, randno]
names(sto[[2]])[k]<-strsplit(names(p[i]),".csv")
k=k+1
}
else {
}
}
return (sto)
}
#### command used for above function ReMatfromInd("C:/Users/s4284361/Documents/GitHub/Pitchers_PTRS2014/Data/Gmats_Cor_as_CSVs","C:/Users/s4284361/Documents/GitHub/Rproject/Psubmatindex.csv")
### Redone MatfromInd For Psubmatfile
ReMatfromInd<-function(dir1,dir2){ ## dir1 <- cor matrix folder ##dir 2 PmatIndex file_file
q<-path_file(dir1)
setwd(dir1)
matrices <- dir()
no.mats <- length(q[[1]][grepl(".csv", q[[1]])])
matrix_list <- list()
# this loop reads in each matrix from the folder of .csv files and writes
# them into a list
for (i in 1:no.mats) {
matrix_list[[i]] <- read.csv(q[[1]][grepl(".csv", q[[1]])][i])
}
names(matrix_list) <- matrices[grepl(".csv",q[[1]])]
z<-read.csv(dir2,stringsAsFactors=FALSE)
GPmat<-list()
for (i in 1:length(z[,5])) {
GPmat[[i]]<-matrix_list[grepl(z[i,5],names(matrix_list))][[1]]
names(GPmat)[i]<-z[i,5]
}
return (GPmat) ### return list of list of list
}
#### modified P through G to accept list instead of dir
PthroughG2<-function(tests) { ## dir1 is the directory of P submatrices and dir2 is the dir containing the G matrices
Pmats<-tests[[1]]
Gmats<-tests[[2]] ### creates list of relevant G matrices entreted in Pmatindex
ProjPG<-matrix(NA,nrow=length(Pmats),ncol=MaxnoTraits(Pmats))
Peigsto<-matrix(NA,nrow=length(Pmats),ncol=MaxnoTraits(Pmats))
Geigsto<-matrix(NA,nrow=length(Pmats),ncol=MaxnoTraits(Pmats))
nullnames<-rep(0,length(Pmats))
rownames(ProjPG)<-nullnames
rownames(Peigsto)<-nullnames
rownames(Geigsto)<-nullnames
for (i in 1:length(Pmats)) {
Psto<-Pmats[grepl(names(Gmats[i]),names(Pmats))]
Gsto<-Gmats[grepl(names(Gmats[i]),names(Pmats))]
rownames(ProjPG)[i]<-names(Gmats[i])
rownames(Peigsto)[i]<-names(Gmats[i])
rownames(Geigsto)[i]<-names(Gmats[i])
for (j in 1:length(Psto[[1]][,1])){
ProjPG[i,j]<-t((eigen(Psto[[1]],symmetric=TRUE)$vectors[,j]))%*%as.matrix(Gsto[[1]])%*%(eigen(Psto[[1]],symmetric=TRUE)$vectors[,j])
Peigsto[i,j]<-eigen(Psto[[1]],symmetric=TRUE)$values[j]
Geigsto[i,j]<-eigen(Gsto[[1]],symmetric=TRUE)$values[j]
}
}
return(list(ProjPG=ProjPG,Peigsto=Peigsto,Geigsto=Geigsto))
}
#### Analysis changed to ignore trait_types. Variability was too large to discriminate between groups. Also, con1992.170 was removed due to correlation values far greater than 1.
if (FALSE) {
Pcor<-listcov2cor(MatasList("G:/GIThub/Rproject/Psubmatrices"))
WriteMatList(Pcor,"G:/GIThub/Rproject/Psubmatrices")
}
PG<-PaG() ##### not geme2001.473 was earlier removed. Rerunning everything includes it. Must be removed for later functions to work.
tests<-matsubsample(PG,5)
test2<-PthroughG2(tests)
if (FALSE) {
lkt<-tests
names(lkt[[1]])<-paste(names(lkt[[1]]),".csv",sep="")
names(lkt[[2]])<-paste(names(lkt[[2]]),".csv",sep="")
WriteMatList(lkt[[1]],"C:/Users/s4284361/Documents/GitHub/Rproject/Psubsampledmatrices")
WriteMatList(lkt[[2]],"C:/Users/s4284361/Documents/GitHub/Rproject/Gsubsampledmatrices")
Gdir<-"C:/Users/s4284361/Documents/GitHub/Rproject/Graphs"
mypath<-file.path(paste(Gdir),paste("P&G","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(test2[[3]],col="white",boxwex=0.25,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Scaled Phenotypic/Genetic variance")
boxplot(test2[[2]],col="grey",add=TRUE, at=1.3:(5+0.3), boxwex=0.25,xaxt='n')
legend(x="topright", c("Genetic Correlation","Phenotypic Correlation"), fill=c("white","grey"))
dev.off()
mypath<-file.path(paste(Gdir),paste("PthroughG","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(test2[[1]],col="white",boxwex=0.25,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Scaled Phenotypic/Genetic variance")
legend(x="topright", c("P%*%G%*%P"), fill=c("White"))
dev.off()
mypath<-file.path(paste(Gdir),paste("All3","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(test2[[2]],col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Scaled Phenotypic/Genetic variance",ylim=c(0,max(test2[[1]])))
boxplot(test2[[3]],add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(test2[[1]],col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
legend(x="topright", c("Phenotypic correlation","Genotypic correlation","Projection of P through G"), fill=c("white","grey","gray42"))
dev.off()
z<-(test2$Peigsto-test2$Geigsto)
mypath<-file.path(paste(Gdir),paste("difP&G","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(z,col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Difference in scaled variance")
legend(x="topleft", c("eig(P)-eig(G)"), fill=c("grey"))
abline(0,0,lty=2)
dev.off()
##Differences between P and G for Trait types
mn<-data.frame(matrix(0,nrow=43,ncol=16))
z<-read.csv("C:/Users/s4284361/Documents/GitHub/Rproject/Psubmatindex.csv",header=TRUE,stringsAsFactors=FALSE)
for (i in 1:length(names(tests[[1]]))) {mn[i,]<-z[grepl(names(tests[[1]])[i],z$filename),]}
PsubtraitM<-tests[[1]][grepl("M",mn[,8])]
PsubtraitS<-tests[[1]][grepl("S",mn[,8])]
PsubtraitL<-tests[[1]][grepl("L",mn[,8])]
GsubtraitM<-tests[[2]][grepl("M",mn[,8])]
GsubtraitS<-tests[[2]][grepl("S",mn[,8])]
GsubtraitL<-tests[[2]][grepl("L",mn[,8])]
subM<-list(PsubtraitM,GsubtraitM)
subS<-list(PsubtraitS,GsubtraitS)
subL<-list(PsubtraitL,GsubtraitL)
MPtG<-PthroughG2(subM)
SPtG<-PthroughG2(subS)
LPtG<-PthroughG2(subL)
DifM<-(MPtG[[2]]-MPtG[[3]])
DifS<-(SPtG[[2]]-SPtG[[3]])
DifL<-(LPtG[[2]]-LPtG[[3]])
mypath<-file.path(paste(Gdir),paste("SplitT_P","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(DifL,col="white",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="eig(P) - eig(G)")
boxplot(DifM,col="grey",add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(DifS,col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
abline(0,0,lty=2)
legend(x="bottomright", c("Life History - 7","Morphology - 26","Sexually Selected - 10"), fill=c("white","grey","gray42"))
dev.off()
### INcluding compiled dataset
z<-(test2$Peigsto-test2$Geigsto)
mypath<-file.path(paste(Gdir),paste("SplitT_P&All","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(DifL,col="white",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="eig(P) - eig(G)",ylim=c(-1.7,1))
boxplot(DifM,col="grey",add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(DifS,col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
boxplot(z,col="black",add=TRUE, at=1.6:(5+0.6), boxwex=0.18, xaxt='n')
abline(0,0,lty=2)
legend(x="bottomright", c("Life History - 7","Morphology - 26","Sexually Selected - 10", "All -43"), fill=c("white","grey","gray42","black"))
dev.off()
mypath<-file.path(paste(Gdir),paste("SplitT_PtG","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(LPtG[[1]],col="white",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="P'GP",ylim=c(min(MPtG[[1]][,5]),max(MPtG[[1]][,1])))
boxplot(MPtG[[1]],col="grey", add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(SPtG[[1]],col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
legend(x="topright", c("Life History - 7","Morphology - 26","Sexually Selected - 10"), fill=c("white","grey","gray42"))
abline(1,0,lty=2)
dev.off()
#### Splitting data by plant/animal taxon
PtaxonA<-tests[[1]][grepl("A",mn[,7])]
PtaxonP<-tests[[1]][grepl("P",mn[,7])]
GtaxonA<-tests[[2]][grepl("A",mn[,7])]
GtaxonP<-tests[[2]][grepl("P",mn[,7])]
subA<-list(PtaxonA,GtaxonA)
subP<-list(PtaxonP,GtaxonP)
APtG<-PthroughG2(subA)
PPtG<-PthroughG2(subP)
DifA<-(APtG[[2]]-APtG[[3]])
DifP<-(PPtG[[2]]-PPtG[[3]])
mypath<-file.path(paste(Gdir),paste("SplitTaxon","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(DifA,col="white",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="eig(P) - eig(G)")
boxplot(DifP,col="grey",add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
abline(0,0,lty=2)
legend(x="bottomright", c("Animal -32","Plant -11"), fill=c("white","grey"))
dev.off()
mypath<-file.path(paste(Gdir),paste("SplitTaxonPGP","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(APtG[[1]],col="white",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="P'GP")
boxplot(PPtG[[2]],col="grey",add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
abline(0,0,lty=2)
legend(x="topright", c("Animal -32","Plant -11"), fill=c("white","grey"))
dev.off()
nullmat<-matrix(0,nrow=length(test2[[1]][,1]),ncol=15)
nullmat[,1:5]<-test2[[1]]
nullmat[,6:10]<-test2[[2]]
nullmat[,11:15]<-test2[[3]]
#### Unused function and graph
anglePG<-function(lists){
angle<-matrix(0,nrow=length(lists[[1]]),ncol=5*length(lists[[1]][[1]][1,]))
for (i in 1:length(lists[[1]])) {
for (j in 1:length(lists[[1]][[1]][1,])){
for (k in 1:5) {
angle[i,(j-1)*5+k]<-acos(t(eigen(lists[[1]][[i]])$vectors[,j])%*%eigen(lists[[2]][[i]])$vectors[,k]/(sqrt(sum(eigen(lists[[1]][[i]])$vectors[,j]*eigen(lists[[1]][[i]])$vectors[,j])*sum(eigen(lists[[2]][[i]])$vectors[,k]*eigen(lists[[2]][[i]])$vectors[,k]))))*180/pi
}
}
}
return(angle)
}
q<-angle
boxplot(q[,1:5],boxwex=0.12,col="grey",at=0.8:4.8,ylab="angle between eigenvectors of P and G",xlab="eigenvector of P")
boxplot(q[,6:10],boxwex=0.12,at=1:5-0.05,add=TRUE,col="white",xaxt='n')
boxplot(q[,11:15],add=TRUE,boxwex=0.12,at=1:5+0.10,col="grey42",xaxt='n')
boxplot(q[,16:20],add=TRUE,boxwex=0.12,at=1:5+0.25,col="tan",xaxt='n')
boxplot(q[,21:25],add=TRUE,boxwex=0.12,at=1:5+0.40,col="azure",xaxt='n')
abline(90,0,lty=2) ### angle for orthogonal matrices
cov2cor(var(q[,c(1,6,11,16,21)])) # angle correlation
}
#####
PaG<-function() {
q<-MatasList("C:/Users/s4284361/Documents/GitHub/Rproject/Psubmatrices")
p<-ReMatfromInd("C:/Users/s4284361/Documents/GitHub/Pitchers_PTRS2014/Data/Gmats_Cor_as_CSVs","C:/Users/s4284361/Documents/GitHub/Rproject/Psubmatindex.csv")
return  (list(Pcor=q,Gcor=p))
}
PG<-PaG() ##### not geme2001.473 was earlier removed. Rerunning everything includes it. Must be removed for later functions to work.
tests<-matsubsample(PG,5)
test2<-PthroughG2(tests)
Gdir<-"C:/Users/s4284361/Documents/GitHub/Rproject/Graphs"
mypath<-file.path(paste(Gdir),paste("P&G","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
dev.off()
boxplot(test2[[3]],col="white",boxwex=0.25,xaxis=NULL,xlab="Eigenvector",ylab="Scaled variance")
boxplot(test2[[2]],col="grey",add=TRUE, at=1.3:(5+0.3), boxwex=0.25,xaxt='n')
legend(x="topright", c("Genetic Correlation","Phenotypic Correlation"), fill=c("white","grey"))
dev.off()
boxplot(test2[[1]],col="white",boxwex=0.25,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Scaled variance")
legend(x="topright", c("P%*%G%*%P"), fill=c("White"))
dev.off()
boxplot(test2[[2]],col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Scaled Phenotypic/Genetic variance",ylim=c(0,max(test2[[1]])))
boxplot(test2[[3]],add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(test2[[1]],col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
boxplot(test2[[2]],col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Scaled Phenotypic/Genetic variance",ylim=c(min(test2[[1]]),max(test2[[1]])))
boxplot(test2[[3]],add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(test2[[1]],col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
boxplot(test2[[2]],col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Scaled Phenotypic/Genetic variance",ylim=c(min(test2[[2]]),max(test2[[1]])))
boxplot(test2[[3]],add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(test2[[1]],col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
boxplot(test2[[2]],col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Scaled Phenotypic/Genetic variance",ylim=c(min(test2[[3]]),max(test2[[1]])))
boxplot(test2[[3]],add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(test2[[1]],col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
legend(x="topright", c("Phenotypic correlation","Genotypic correlation","Projection of P through G"), fill=c("white","grey","gray42"))
dev.off()
boxplot(test2[[2]],col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Scaled Phenotypic/Genetic variance",ylim=c(min(test2[[3]]),max(test2[[1]])))
boxplot(test2[[3]],add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(test2[[1]],col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
names(test)
names(test2)
legend(x="topright", c("Phenotypic correlation","Genotypic correlation","Projection of P through G"), fill=c("grey","white","gray42"))
boxplot(test2[[2]],col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Scaled variance",ylim=c(min(test2[[3]]),max(test2[[1]])))
boxplot(test2[[3]],add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(test2[[1]],col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
max(test[[2]],test[[3]],test[[1]])
max(test2[[2]],test2[[3]],test2[[1]])
min(test2[[2]],test2[[3]],test2[[1]])
boxplot(test2[[2]],col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Scaled variance",ylim=c(min(test2[[2]],test2[[3]],test2[[1]]),max(test2[[2]],test2[[3]],test2[[1]])))
boxplot(test2[[3]],add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(test2[[1]],col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
legend(x="topright", c("Phenotypic","Genetic","Projection of P through G"), fill=c("grey","white","gray42"))
boxplot(test2[[2]],col="grey",boxwex=0.18,xaxis=NULL,xlab="Eigenvector",ylab="Scaled variance",ylim=c(min(test2[[2]],test2[[3]],test2[[1]]),max(test2[[2]],test2[[3]],test2[[1]])))
boxplot(test2[[3]],add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(test2[[1]],col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
legend(x="topright", c("Phenotypic","Genetic","Projection of P through G"), fill=c("grey","white","gray42"))
z<-(test2$Peigsto-test2$Geigsto)
mypath<-file.path(paste(Gdir),paste("difP&G","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(z,col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Difference in scaled variance")
legend(x="topleft", c("eig(P)-eig(G)"), fill=c("grey"))
dev.off()
boxplot(z,col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Difference in scaled variance")
legend(x="topleft", c("eig(P)-eig(G)"), fill=c("grey"))
abline(0,0,lty=2)
mn<-data.frame(matrix(0,nrow=43,ncol=16))
z<-read.csv("C:/Users/s4284361/Documents/GitHub/Rproject/Psubmatindex.csv",header=TRUE,stringsAsFactors=FALSE)
for (i in 1:length(names(tests[[1]]))) {mn[i,]<-z[grepl(names(tests[[1]])[i],z$filename),]}
PsubtraitM<-tests[[1]][grepl("M",mn[,8])]
PsubtraitS<-tests[[1]][grepl("S",mn[,8])]
PsubtraitL<-tests[[1]][grepl("L",mn[,8])]
GsubtraitM<-tests[[2]][grepl("M",mn[,8])]
GsubtraitS<-tests[[2]][grepl("S",mn[,8])]
GsubtraitL<-tests[[2]][grepl("L",mn[,8])]
subM<-list(PsubtraitM,GsubtraitM)
subS<-list(PsubtraitS,GsubtraitS)
subL<-list(PsubtraitL,GsubtraitL)
MPtG<-PthroughG2(subM)
SPtG<-PthroughG2(subS)
LPtG<-PthroughG2(subL)
DifM<-(MPtG[[2]]-MPtG[[3]])
DifS<-(SPtG[[2]]-SPtG[[3]])
DifL<-(LPtG[[2]]-LPtG[[3]])
mypath<-file.path(paste(Gdir),paste("SplitT_P","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(DifL,col="white",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="eig(P) - eig(G)")
boxplot(DifM,col="grey",add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(DifS,col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
abline(0,0,lty=2)
legend(x="bottomright", c("Life History - 7","Morphology - 26","Sexually Selected - 10"), fill=c("white","grey","gray42"))
dev.off()
boxplot(DifL,col="white",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="eig(P) - eig(G)")
boxplot(DifM,col="grey",add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(DifS,col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
abline(0,0,lty=2)
?Text
?text
text(x=c(0,0),y=c(0.25,0.75), labels=c("P>G","P<G")
)
text(x=c(0.5,0.5),y=c(0.25,0.75), labels=c("P>G","P<G"))
text(x=c(0.5,0.5),y=c(0.25,-0.75), labels=c("P>G","P<G"))
text(x=c(0.5,0.5,0.5),y=c(0.25,-0.75,0), labels=c("P>G","P<G","P=G"))
boxplot(DifL,col="white",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="eig(P) - eig(G)")
boxplot(DifM,col="grey",add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(DifS,col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
abline(0,0,lty=2)
text(x=c(0.5,0.5),y=c(0.25,-0.75), labels=c("P>G","P<G"))
legend(x="bottomright", c("Life History - 7","Morphology - 26","Sexually Selected - 10"), fill=c("white","grey","gray42"))
boxplot(DifL,col="white",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="eig(P) - eig(G)",ylim=c(min(DifM,DifL,DifS),max(DifM,DifL,DifS)))
boxplot(DifM,col="grey",add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(DifS,col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
abline(0,0,lty=2)
text(x=c(0.5,0.5),y=c(0.25,-0.75), labels=c("P>G","P<G"))
legend(x="bottomright", c("Life History - 7","Morphology - 26","Sexually Selected - 10"), fill=c("white","grey","gray42"))
text(x=c(0.5,0.5),y=c(0.25,-0.25), labels=c("P>G","P<G"))
boxplot(DifL,col="white",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="eig(P) - eig(G)",ylim=c(min(DifM,DifL,DifS),max(DifM,DifL,DifS)))
boxplot(DifM,col="grey",add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(DifS,col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
abline(0,0,lty=2)
text(x=c(0.5,0.5),y=c(0.25,-0.25), labels=c("P>G","P<G"))
legend(x="bottomright", c("Life History - 7","Morphology - 26","Sexually Selected - 10"), fill=c("white","grey","gray42"))
boxplot(DifL,col="white",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="eig(P) - eig(G)",ylim=c(min(DifM,DifL,DifS),max(DifM,DifL))
boxplot(DifM,col="grey",add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(DifL,col="white",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="eig(P) - eig(G)",ylim=c(min(DifM,DifL,DifS),max(DifM,DifL))
)
boxplot(DifM,col="grey",add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(DifS,col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
boxplot(DifL,col="white",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="eig(P) - eig(G)",ylim=c(min(DifM,DifL,DifS),max(DifM,DifL,DifS))
boxplot(DifM,col="grey",add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(DifL,col="white",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="eig(P) - eig(G)",ylim=c(min(DifM,DifL,DifS),max(DifM,DifL,DifS)))
boxplot(DifM,col="grey",add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(DifS,col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
abline(0,0,lty=2)
text(x=c(0.5,0.5),y=c(0.25,-0.25), labels=c("P>G","P<G"))
legend(x="bottomright", c("Life History - 7","Morphology - 26","Sexually Selected - 10"), fill=c("white","grey","gray42"))
mypath<-file.path(paste(Gdir),paste("SplitT_P","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(DifL,col="white",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="eig(P) - eig(G)",ylim=c(min(DifM,DifL,DifS),max(DifM,DifL,DifS)))
boxplot(DifM,col="grey",add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(DifS,col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
abline(0,0,lty=2)
text(x=c(0.5,0.5),y=c(0.25,-0.25), labels=c("P>G","P<G"))
legend(x="bottomright", c("Life History - 7","Morphology - 26","Sexually Selected - 10"), fill=c("white","grey","gray42"))
dev.off()
mypath<-file.path(paste(Gdir),paste("All3","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(test2[[2]],col="grey",boxwex=0.18,xaxis=NULL,xlab="Eigenvector",ylab="Scaled variance",ylim=c(min(test2[[2]],test2[[3]],test2[[1]]),max(test2[[2]],test2[[3]],test2[[1]])))
boxplot(test2[[3]],add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(test2[[1]],col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
legend(x="topright", c("Phenotypic","Genetic","Projection of P through G"), fill=c("grey","white","gray42"))
dev.off()
boxplot(test2[[2]],col="grey",boxwex=0.18,xaxis=NULL,xlab="Eigenvector",ylab="Scaled variance",ylim=c(min(test2[[2]],test2[[3]],test2[[1]]),max(test2[[2]],test2[[3]],test2[[1]])))
boxplot(test2[[3]],add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(test2[[1]],col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
legend(x="topright", c("Phenotypic","Genetic","Projection of P through G"), fill=c("grey","white","gray42"))
legend(x="topright", c("Phenotypic_Correlation","Genetic_Correlation","Projection of P through G"), fill=c("grey","white","gray42"))
mypath<-file.path(paste(Gdir),paste("difP&G","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(z,col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Difference in scaled variance")
legend(x="topleft", c("eig(P)-eig(G)"), fill=c("grey"))
abline(0,0,lty=2)
dev.off()
mypath<-file.path(paste(Gdir),paste("difP&G","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(z,col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Difference in scaled variance")
z<-(test2$Peigsto-test2$Geigsto)
boxplot(z,col="grey",boxwex=0.18,xaxis=NULL,xlab="Trait or Eigenvector",ylab="Difference in scaled variance")
legend(x="topleft", c("eig(P)-eig(G)"), fill=c("grey"))
abline(0,0,lty=2)
dev.off()
mypath<-file.path(paste(Gdir),paste("All3","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(test2[[2]],col="grey",boxwex=0.18,xaxis=NULL,xlab="Eigenvector",ylab="Scaled variance",ylim=c(min(test2[[2]],test2[[3]],test2[[1]]),max(test2[[2]],test2[[3]],test2[[1]])))
boxplot(test2[[3]],add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(test2[[1]],col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
legend(x="topright", c("Phenotypic_Correlation","Genetic_Correlation","Projection of P through G"), fill=c("grey","white","gray42"))
dev.off()
mypath<-file.path(paste(Gdir),paste("SplitT_P","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
boxplot(DifL,col="white",boxwex=0.18,xaxis=NULL,xlab="Eigenvector",ylab="eig(P) - eig(G)",ylim=c(min(DifM,DifL,DifS),max(DifM,DifL,DifS)))
boxplot(DifM,col="grey",add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(DifS,col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
abline(0,0,lty=2)
text(x=c(0.5,0.5),y=c(0.25,-0.25), labels=c("P>G","P<G"))
legend(x="bottomright", c("Life History - 7","Morphology - 26","Sexually Selected - 10"), fill=c("white","grey","gray42"))
dev.off()
mypath<-file.path(paste(Gdir),paste("SplitT_P","_boxplot" ,paste("T5n=43"), ".pdf", sep = ""))
pdf(file=mypath)
pdf(file=mypath)
boxplot(DifL,col="white",boxwex=0.18,xaxis=NULL,xlab="Eigenvector",ylab="eig(P) - eig(G)",ylim=c(min(DifM,DifL,DifS),max(DifM,DifL,DifS)))
boxplot(DifM,col="grey",add=TRUE, at=1.2:(5+0.2), boxwex=0.18,xaxt='n')
boxplot(DifS,col="gray42",add=TRUE, at=1.4:(5+0.4), boxwex=0.18,xaxt='n')
abline(0,0,lty=2)
text(x=c(0.5,0.5),y=c(0.25,-0.25), labels=c("P>G","P<G"))
legend(x="bottomright", c("Life History - 7","Morphology - 26","Sexually Selected - 10"), fill=c("white","grey","gray42"))
dev.off()
permsto<-GPmatcomp(5,83,5,0*diag(5),diag(5), 1000,"C:/Users/s4284361/Documents/GitHub/Rproject/Simulatedstorage/p=5/Graphs", FALSE,TRUE)
WriteMatList(permsto[[1]],"C:/Users/s4284361/Documents/GitHub/Rproject/Simulatedstorage/p=5/Pmat")
WriteMatList(permsto[[2]],"C:/Users/s4284361/Documents/GitHub/Rproject/Simulatedstorage/p=5/Gmat")
setwd("C:/Users/s4284361/Documents/GitHub/Rproject/Simulatedstorage/p=5")
write.csv(permsto[[4]],row.names=FALSE,file="SimulatedPeigenvalues.csv")
write.csv(permsto[[5]],row.names=FALSE,file="SimulatedGeigenvalues.csv")
permsto<-GPmatcomp(10,166,5,0*diag(10),diag(10), 1000,"C:/Users/s4284361/Documents/GitHub/Rproject/Simulatedstorage/p=10/Graphs", FALSE,TRUE)
WriteMatList(permsto[[1]],"C:/Users/s4284361/Documents/GitHub/Rproject/Simulatedstorage/p=10/Pmat")
WriteMatList(permsto[[2]],"C:/Users/s4284361/Documents/GitHub/Rproject/Simulatedstorage/p=10/Gmat")
setwd("C:/Users/s4284361/Documents/GitHub/Rproject/Simulatedstorage/p=10")
write.csv(permsto[[4]],row.names=FALSE,file="SimulatedPeigenvalues.csv")
write.csv(permsto[[5]],row.names=FALSE,file="SimulatedGeigenvalues.csv")
